service core-api {
	@handler UserLogin
	post /user/login(LoginRequest) returns (LoginResponse)

	@handler UserDetail
	get /user/detail(UserDetailRequest) returns (UserDetailResponse)

	@handler EmailCodeSendRegister
	post /email/code/register(MailCodeSendRequest) returns ()

	@handler UserRegister
	post /user/register(UserRegisterRequest) returns (UserRegisterResponse)
}

@server(
	middleware: Auth
)
service core-api{
	@handler FileUpload
	post /file/upload(FileUploadRequest) returns (FileUploadResponse)

	@handler UserRepositorySave
	post /user/repository/save(UserRepositorySaveRequest) returns ()

	@handler UserFileList
	get /user/file/list(UserFileListRequest) returns (UserFileListResponse)

	@handler UserFileNameUpdate
	post /user/file/name/update(UserFileNameUpdateRequest) returns ()
}

type LoginRequest {
	Name     string `json:"name"`
	Password string `json:"password"`
}

type LoginResponse {
	Token string `json:"token"`
}

type UserDetailRequest {
	Identity string `json:"identity"`
}

type UserDetailResponse {
	Name  string `json:"name"`
	Email string `json:"email"`
}

type MailCodeSendRequest {
	Email string `json:"email"`
}

type UserRegisterRequest {
	Name     string `json:"name"`
	Email    string `json:"email"`
	Password string `json:"password"`
	Code     string `json:"code"`
}

type UserRegisterResponse {
	Token string `json:"token"`
}

type FileUploadRequest {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadResponse {
	Identity string `json:"identity"`
	Ext      string `json:"ext"`
	Name     string `json:"name"`
}

type UserRepositorySaveRequest {
	ParentId           int64  `json:"parentId"`
	RepositoryIdentity string `json:"repositoryIdentity"`
	Ext                string `json:"ext"`
	Name               string `json:"name"`
}

type UserFileListRequest {
	Identity string `json:"identity,optional"`
	Page     int    `json:"page,optional"`
	Size     int    `json:"size,optional"`
}

type UserFileListResponse {
	List  []*UserFile `json:"list"`
	Count int64       `json:"count"`
}

type UserFile {
	Id                 int64  `json:"id"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repository_identity"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Path               string `json:"path"`
	Size               int64  `json:"size"`
}

type UserFileNameUpdateRequest {
	Identity string `json:"identity"`
	Name     string `json:"name"`
}